// Copyright (C) 2015 Technische Universitaet Muenchen
// This file is part of the Mamico project. For conditions of distribution
// and use, please see the copyright notice in Mamico's main folder, or at
// www5.in.tum.de/mamico

template <class Cell_T, unsigned int dim, class Container_T>
void coupling::sendrecv::FromMD2MacroRecvOnly<Cell_T, dim>::allocateReceiveBuffers(coupling::sendrecv::DataExchange<Cell_T, dim>& dataExchange, const Container_T& cells) {
  for (unsigned int i = 0; i < numberCells; i++)
  I01* idx;
  Cell_T* cell;
  for(auto pair : cells) {
    std::tie(cell, idx) = pair;
    coupling::sendrecv::SendReceiveBuffer<Cell_T, dim>::allocateReceiveBuffers(dataExchange, idx);
  }
}

template <class Cell_T, unsigned int dim, class Container_T>
void coupling::sendrecv::FromMD2MacroRecvOnly<Cell_T, dim>::readFromReceiveBuffer(coupling::sendrecv::DataExchange<Cell_T, dim>& dataExchange, const Container_T& cells) {
  coupling::sendrecv::SendReceiveBuffer<Cell_T, dim>::readFromReceiveBuffer(dataExchange, cells);
}

template <class Cell_T, unsigned int dim, class Container_T>
void coupling::sendrecv::FromMD2MacroRecvOnly<Cell_T, dim>::sendFromMD2Macro(coupling::sendrecv::DataExchange<Cell_T, dim>& dataExchange, const Container_T& cells) {
  sendFromMD2MacroNonBlocking(dataExchange, cells);
  wait4SendFromMD2Macro(dataExchange, cells);
}

template <class Cell_T, unsigned int dim, class Container_T>
void coupling::sendrecv::FromMD2MacroRecvOnly<Cell_T, dim>::sendFromMD2MacroNonBlocking(coupling::sendrecv::DataExchange<Cell_T, dim>& dataExchange, const Container_T& cells) {
  // empty send and receive buffers
  coupling::sendrecv::SendReceiveBuffer<Cell_T, dim>::deleteBuffers();

  // allocate the receive buffers and trigger the MPI-recv
  allocateReceiveBuffers(dataExchange, cells);
  // fill the send buffers
  // writeToSendBuffer(dataExchange,couplingCellsFromMamico); // no sending

  coupling::sendrecv::SendReceiveBuffer<Cell_T, dim>::allocateRequests();

  coupling::sendrecv::SendReceiveBuffer<Cell_T, dim>::triggerReceiving(dataExchange);
  // coupling::sendrecv::SendReceiveBuffer<Cell_T,dim>::triggerSending(dataExchange); // no sending
}

template <class Cell_T, unsigned int dim, class Container_T>
void coupling::sendrecv::FromMD2MacroRecvOnly<Cell_T, dim>::wait4SendFromMD2Macro(coupling::sendrecv::DataExchange<Cell_T, dim>& dataExchange, const Container_T& cells) {
  // wait for all send- and receive operations to complete
  coupling::sendrecv::SendReceiveBuffer<Cell_T, dim>::waitAllOperations();

  // fill information from receive buffers into the coupling cells
  readFromReceiveBuffer(dataExchange, cells);
}
